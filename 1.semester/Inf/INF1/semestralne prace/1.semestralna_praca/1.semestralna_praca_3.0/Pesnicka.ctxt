#BlueJ class context
comment0.params=interpret\ nazovSkladby\ zaner
comment0.target=Pesnicka(java.lang.String,\ java.lang.String,\ java.lang.String)
comment0.text=\r\n\ Parametricky\ konstruktor\ 1\ -\ vsetky\ parametre\r\n\ @param\ interpret\r\n\ odovzdava\ nazov\ interpreta\r\n\ \r\n\ @param\ nazovSkladby\r\n\ odovzdava\ nazov\ pesnicky\r\n\ \r\n\ @param\ zaner\r\n\ odovzdava\ nazov\ zanra\r\n\ \r\n\ cislo\ pesnicky\ automaticky\ nastavuje\ na\ 1\r\n
comment1.params=interpret\ nazovSkladby
comment1.target=Pesnicka(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Parametricky\ konstruktor\ 2\r\n\ chyba\ parameter\ zaner\ (predpokladajme,\ ze\ ho\ nepozname)\r\n\ \r\n\ @param\ interpret\r\n\ odovzdava\ nazov\ interpreta\r\n\ \r\n\ @param\ nazovSkladby\r\n\ odovzdava\ nazov\ pesnicky\r\n\ \r\n\ cislo\ pesnicky\ automaticky\ nastavuje\ na\ 1\r\n
comment2.params=
comment2.target=Pesnicka()
comment2.text=\r\n\ Bezparametricky\ konstruktor\r\n\ Vsetky\ parametre\ su\ predvolene\ dane\r\n\ Sluzi\ na\ testovacie\ ucely\r\n
comment3.params=
comment3.target=java.lang.String\ getInterpret()
comment3.text=\r\n\ Metoda\ getInterpret\r\n\ @return\ interpret\r\n\ vracia\ interpreta\ pesnicky\r\n
comment4.params=
comment4.target=java.lang.String\ getNazovSkladby()
comment4.text=\r\n\ Metoda\ getNazovSkladby\r\n\ @return\ nazovSkladby\r\n\ vracia\ nazov\ pesnicky\r\n
comment5.params=
comment5.target=java.lang.String\ getZaner()
comment5.text=\r\n\ Metoda\ getZaner\r\n\ @return\ zaner\r\n\ vracia\ zaner\ pesnicky\r\n
comment6.params=interpret
comment6.target=void\ setInterpret(java.lang.String)
comment6.text=\r\n\ Metoda\ setInterpret\r\n\ Nastavuje\ interpreta\ pesnicky\r\n\ @param\ interpret\r\n\ odovzdava\ interpreta\ pesnicky\r\n
comment7.params=nazovSkladby
comment7.target=void\ setNazovSkladby(java.lang.String)
comment7.text=\r\n\ Metoda\ setNazovSkladby\r\n\ Nastavuje\ nazov\ pesnicky\r\n\ @param\ nazovSkladby\r\n\ odovzdava\ nazov\ pesnicky\r\n
comment8.params=zaner
comment8.target=void\ setZaner(java.lang.String)
comment8.text=\r\n\ Metoda\ setZaner\r\n\ Nastavuje\ zaner\ pesnicky\r\n\ @param\ zaner\r\n\ odovzdava\ zaner\ pesnicky\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ toString\r\n\ @return\ strBuilder.toString\r\n\ vypisuje\ formatovany\ vypis\ jednej\ pesnicky\ prostrednictvom\ triedy\ Formatter\ a\ StringBuffer\r\n
numComments=10
