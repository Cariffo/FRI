#include <stdio.h>
#include <sys/types.h> 
#include <sys/socket.h>
#include <netinet/in.h>

/*Globalne premenne*/
int quit = 0 ;//rozhodovanie ukoncenia vlakna resp logout pouzivatela
char escsq[256] = "exit\n"; //po zadani tohto logout

void klient(int); //prototyp funkcie

void error(char *msg)//vypisovanie errorov s podporou sys. hlasky
{
    perror(msg);
    exit(1);
}

int main(int argc, char *argv[])
{
    //lokalne premenne
     int sockfd, newsockfd, portno, clilen, pid;
     struct sockaddr_in serv_addr, cli_addr;
     
      
     if (argc < 2) {
         fprintf(stderr,"ERROR, no port provided\n");
         exit(1);
     }
     sockfd = socket(AF_INET, SOCK_STREAM, 0);
     if (sockfd < 0) 
        error("ERROR opening socket");
     bzero((char *) &serv_addr, sizeof(serv_addr));
     portno = atoi(argv[1]);
     serv_addr.sin_family = AF_INET;
     serv_addr.sin_addr.s_addr = INADDR_ANY;
     serv_addr.sin_port = htons(portno);
     if (bind(sockfd, (struct sockaddr *) &serv_addr,
              sizeof(serv_addr)) < 0) 
              error("ERROR on binding");
     listen(sockfd,5);
     clilen = sizeof(cli_addr);
     while (1) {
         newsockfd = accept(sockfd, 
               (struct sockaddr *) &cli_addr, &clilen);
         if (newsockfd < 0) 
             error("ERROR on accept");
         pid = fork();
         if (pid < 0)
             error("ERROR on fork");
         if (pid == 0)  {
             close(sockfd);
             quit=0;
             while (quit!=1){
             klient(newsockfd);
             }
             exit(0);
         }
         else close(newsockfd);
     } 
     return 0; //sem sa program nikdy nedostane
}

void klient (int sock)
{
   int n;
   char buffer_in[1024];
   char buffer_out[1024];
   bzero(buffer_in,256);
   n = read(sock,buffer_in,255); 
   if (n < 0) error("ERROR reading from socket");
   if(strcmp(buffer_in,escsq)==0)
   {
       quit=1;
       printf("Ukoncenie komunikacie zo strany klienta\n");
       n = write(sock,"exit\n",18);
       if (n < 0) error("ERROR writing to exit socket"); 
       close(sock);
   }
   else{  
   printf("Sprava od ? je:%s\n",buffer_in); //ID pouziatela
   n = write(sock,"Sent",18);
   if (n < 0) error("ERROR writing to socket");   
   }
}