====================================
X2GO SERVER
====================================
Education and the Cloud
November 20, 2013
Configure x2go remote desktop capability into LXC Containers
Filed under: LXC, Remote Desktop, ubuntu, x2go — Tags: lxc, remote desktop, ubuntu, x2go — bmullan @ 8:32 am

I’ve long used x2go for remote desktop access to Linux machines.   So far I’ve found x2go to be by far the fastest/best remote desktop application for Linux whereby a Linux, Windows or Mac user can access that Linux desktop “server”.

The following will show you how to create an LXC container and configure it to implement the x2go (see www.x2go.org) remote desktop “server” so you can access the LXC container’s desktop using any of x2go native client (windows, linux, mac) or even the x2go web browser plugin (ubuntu only at this time).

Note 1:

    the following assumes an Ubuntu Host OS.   LXC is implemented in the Linux Kernel and should be available on ANY Distro but use may differ in some ways not documented here.

First lets create a test LXC container

  $ sudo lxc-create -t ubuntu -n test

Note 2:    -t specifies “what” linux LXC “template” to use in creation of the LXC container.   In ubuntu templates exist for:

    lxc-alpine
    lxc-busybox
    lxc-fedora
    lxc-sshd
    lxc-altlinux
    lxc-cirros
    lxc-opensuse
    lxc-ubuntu
    lxc-archlinux
    lxc-debian
    lxc-oracle
    lxc-ubuntu-cloud

So although I use Ubuntu I could create an LXC container running OpenSuse, Debian, Arch Linux etc….  very cool capability.

The ONLY caveate is that all container OS’s will have to run the Host OS’s “kernel”.    This normally is not a problem for most use-cases though.

Next we have to “start” the LXC container we called “test”

  $ sudo lxc-start -n test

As part of executing the above command you will be presented with a login prompt for the LXC container.   The default LoginID = ubuntu and the password = ubuntu

So login to the LXC container called “test”

Next I started adding some of the applications I would be using to do the test.

First I make sure the test container is updated

  test:~$ sudo apt-get update && sudo apt-get upgrade -y

Next I install either an XFCE or LXDE desktop… Note, I use one of these because no remote desktop software I am aware of supports the 3D graphics of etiher Unity or Gnome3… including x2go. But x2go does support xfce, lxde, mate and a couple others.

So lets install xfce desktop in the container.

  test:~$ sudo apt-get install xubuntu-desktop -y

Poznamka: V Debiane by sa namiesto balicka "xubuntu-desktop" instaloval balicek "xfce4" => "apt-get install xfce4", resp. "aptitude install xfce4"

In order to install x2go PPA in the container I have to get “add-apt-repository” (its not by default)

  test:~$ sudo apt-get install sofware-properties-common -y

Now I can add the x2go PPA:

test:~$ sudo add-apt-repository ppa:x2go/stable

  Poznamka: Ak tento prikaz nezbehne, treba ho napisat rucne.

Aktualizujeme databazu:

  sudo apt-get udpate

Next, install the x2goserver to which I will connect from my Host by using the x2goclient I will install there later.

  test:~$ sudo aptitude install x2goserver x2goserver-xsession -y

Poznamka: ked som to na debian 9 stretch robil cez apt-get "sudo apt-get install x2goserver x2goserver-xsession -y", nevedelo mi vyriesit zavisle balicky (dependencies). ani pouzitie "aptitude" namiesto "apt-get" nevyriesilo zavislosti, hoci lepsie detegoval chybajuce balicky. Ale niektore jednoducho v stretchi nie su.

x2goclient uses SSH to login to an x2goserver.

There are various advanced x2go configs you can do for login but to keep it simple I am going to just be using login/password combo.

However, to be able to do that the default Ubuntu /etc/ssh/sshd_config file needs 2 changes to allow logging in with login/password.

Use whatever editor you use to edit (I use nano – which you would have to also install with apt-get into the container)

  test:~$ sudo nano /etc/ssh/sshd_config

Change the following from NO to YES to enable challenge-response passwords

  ChallengeResponseAuthentication no

Uncomment out (re remove the #) the following to enable Password Authentication

  #PasswordAuthentication yes 

Save your 2 changes and exit your editor.

Now, restart SSH so the changes take effect

 test:~$ sudo service ssh restart

At this point the x2goserver is all setup in the LXC container so you can access it with your x2goclient on your Host OS or wherever they might be assuming they can connect to your LXC container’s IP address.


====================================
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

V tomto momente je X2GO server funkcny

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
====================================

You can shutdown (or reboot) the LXC container while logged into it just as you would in any Ubuntu by:

  test:~$ sudo shutdown -r now  -or- $ sudo shutdown -h now

What is nice about LXC is that once you have shutdown the LXC container you can “clone” that entire container very quickly by issuing the following command on your Host OS

  hostOS:~$  sudo lxc-clone -o test -n new_container

Each new LXC container will get a new IP address (default will be in the 10.x.x.x address range).

After you “start” your new cloned LXC container:

  hostOS:~$  sudo lxc-start -n new_container

To access the NEW LXC container you can find out the new LXC container’s IP address using the following command after the LXC container has been started:

  hostOS:~$ sudo lxc-ls –fancy

 You can then use that IP address in creating a new x2go “session profile”.

Again, remember that each container “could” be configured with a different Desktop Environment so one user could have xfce another lxde another Mate etc.

Hope this is useful and fun for you to experiment with.

Brian





====================================
X2GO Klient
====================================
X2Go Client Installation

The client installation is easier than the server installation. Most distributions already have the client in their provided repositories and this package can easily be installed with the apt meta-packager.

NOTE: Remember that this is done on a computer that is going to connect to the server setup in the previous paragraphs.

  apt-get install x2goclient

Assuming that apt doesn’t return any issues, the X2Go client should be ready to go. Navigate to the X2Go executable via the client’s distribution’s file explorer or launch the utility from the command line with the following command.

  x2goclient

Objavi sa okno. Vyplnime nasledovne polozky:

  Session name: <nazov_pripojenia>
  Host: <IP_adresa_hosta_s_x2go_serverom>
  Login: <username>
  Session type: <nazov_pouzivatelskeho_prostredia> (v tomto pripade zvolime XFCE)>

Potvrdime volby tlacidlom "OK" a pripojime sa ku hostovi. Zobrazi sa nam prihlasovacia obrazovka s uz vyplnenym pouzivatelskym menom. Po zadani hesla sa objavi pracovna plocha XFCE4.


Zdroj:
  (Server)
  https://bmullan.wordpress.com/2013/11/20/configure-x2go-remote-desktop-capability-into-lxc-containers/

  (Klient)
  https://www.tecmint.com/setup-remote-desktop-using-x2go-server-and-client-in-debian/2/

  (Ako pouzivat)
  https://www.youtube.com/results?search_query=x2go
  https://www.youtube.com/watch?v=IYsHa260zi4

  https://ubuntuforums.org/showthread.php?t=1893429