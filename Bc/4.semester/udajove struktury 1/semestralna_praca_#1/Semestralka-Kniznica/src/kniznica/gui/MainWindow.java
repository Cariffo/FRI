package kniznica.gui;

import datastructures.lists.ArrayList.ArrayList;
import kniznica.data.Kniha;
import kniznica.data.Kniznica;
import datastructures.lists.EList;
import datastructures.priorityFronts.EPriorityFront;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import kniznica.data.Citatel;
import kniznica.Exception.EKniznica;

/**
 *
 * @author Andrej Šišila
 */
public class MainWindow extends javax.swing.JFrame {
    
    private Kniznica aKniznica;
    private int aJehoIndex;
    
    public MainWindow() {
        initComponents();
        aKniznica = new Kniznica();
        //maximalizuj okno po spusteni
        addWindowListener(new WindowAdapter() {
            public void windowOpened(WindowEvent e) {
                setExtendedState(MAXIMIZED_BOTH);
                }
            }
        );
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPomocnyKnihy1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        taby = new javax.swing.JTabbedPane();
        panelKnihy = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listKnihy = new javax.swing.JList();
        panelPomocnyKnihy = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        panelCitateila = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCitatelia = new javax.swing.JList();
        panelPomocnyCitatelia = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        panelJehoKnihy = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listJehoKnihy = new javax.swing.JList();
        panelVrateneKnihy = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listVrateneKnihy = new javax.swing.JList();
        panelPomocnyVrateneKnihy = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuKniha = new javax.swing.JMenu();
        itemPridajKnihu = new javax.swing.JMenuItem();
        itemPridajZanerKnihe = new javax.swing.JMenuItem();
        itemDopytPoKnihe = new javax.swing.JMenuItem();
        itemSpracujVsetkyVratene = new javax.swing.JMenuItem();
        menuCitatel = new javax.swing.JMenu();
        itemPridajCitatela = new javax.swing.JMenuItem();
        itemPozicajKnihu = new javax.swing.JMenuItem();
        itemVratitKnihu = new javax.swing.JMenuItem();
        menuHladat = new javax.swing.JMenu();
        itemVyhladajPodlaNazvu = new javax.swing.JMenuItem();
        itemVyhladajPodlaZanru = new javax.swing.JMenuItem();
        itemVyhladajPodlaMaxPozicAkt = new javax.swing.JMenuItem();
        itemVyhladajPodlaMaxPozicCelk = new javax.swing.JMenuItem();
        itemVyhladajPodlaMaxCakPozic = new javax.swing.JMenuItem();
        menuUlozNacitaj = new javax.swing.JMenu();
        itemUlozStav = new javax.swing.JMenuItem();
        itemNacitajStav = new javax.swing.JMenuItem();

        panelPomocnyKnihy1.setPreferredSize(new java.awt.Dimension(100, 25));

        jLabel12.setText("Priezvisko");

        jLabel13.setText("Meno");

        jLabel14.setText("Nazov knihy");

        jLabel15.setText("Zaner");

        jLabel16.setText("Stav");

        jLabel29.setText("Rok vydania");

        javax.swing.GroupLayout panelPomocnyKnihy1Layout = new javax.swing.GroupLayout(panelPomocnyKnihy1);
        panelPomocnyKnihy1.setLayout(panelPomocnyKnihy1Layout);
        panelPomocnyKnihy1Layout.setHorizontalGroup(
            panelPomocnyKnihy1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyKnihy1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );
        panelPomocnyKnihy1Layout.setVerticalGroup(
            panelPomocnyKnihy1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyKnihy1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelPomocnyKnihy1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel29)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kniznica");

        panelKnihy.setLayout(new java.awt.BorderLayout());

        listKnihy.setBackground(new java.awt.Color(255, 255, 192));
        jScrollPane1.setViewportView(listKnihy);

        panelKnihy.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panelPomocnyKnihy.setPreferredSize(new java.awt.Dimension(100, 25));

        jLabel1.setText("Priezvisko");

        jLabel2.setText("Meno");

        jLabel3.setText("Nazov knihy");

        jLabel4.setText("Zaner");

        jLabel5.setText("Stav");

        jLabel28.setText("Rok vydania");

        javax.swing.GroupLayout panelPomocnyKnihyLayout = new javax.swing.GroupLayout(panelPomocnyKnihy);
        panelPomocnyKnihy.setLayout(panelPomocnyKnihyLayout);
        panelPomocnyKnihyLayout.setHorizontalGroup(
            panelPomocnyKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyKnihyLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );
        panelPomocnyKnihyLayout.setVerticalGroup(
            panelPomocnyKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyKnihyLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelPomocnyKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel28)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelKnihy.add(panelPomocnyKnihy, java.awt.BorderLayout.PAGE_START);

        taby.addTab("Knihy", panelKnihy);

        panelCitateila.setLayout(new java.awt.BorderLayout());

        listCitatelia.setBackground(new java.awt.Color(255, 255, 192));
        listCitatelia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCitateliaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listCitatelia);

        panelCitateila.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        panelPomocnyCitatelia.setMinimumSize(new java.awt.Dimension(10, 25));
        panelPomocnyCitatelia.setPreferredSize(new java.awt.Dimension(100, 25));

        jLabel7.setText("Meno");

        jLabel8.setText("Priezvisko");

        jLabel9.setText("Vek");

        jLabel10.setText("Vekova skupina");

        jLabel11.setText("Pocet teraz pozicanych knih");

        jLabel26.setText("Pocet celkovo pozicanych knih");

        jLabel27.setText("Pocet cakajucich poziciek");

        jLabel6.setText("Pozicane knihy");

        javax.swing.GroupLayout panelPomocnyCitateliaLayout = new javax.swing.GroupLayout(panelPomocnyCitatelia);
        panelPomocnyCitatelia.setLayout(panelPomocnyCitateliaLayout);
        panelPomocnyCitateliaLayout.setHorizontalGroup(
            panelPomocnyCitateliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyCitateliaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel7)
                .addGap(90, 90, 90)
                .addComponent(jLabel8)
                .addGap(80, 80, 80)
                .addComponent(jLabel9)
                .addGap(50, 50, 50)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelPomocnyCitateliaLayout.setVerticalGroup(
            panelPomocnyCitateliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyCitateliaLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelPomocnyCitateliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panelCitateila.add(panelPomocnyCitatelia, java.awt.BorderLayout.PAGE_START);

        taby.addTab("Citatelia", panelCitateila);

        panelJehoKnihy.setEnabled(false);
        panelJehoKnihy.setLayout(new java.awt.BorderLayout());

        listJehoKnihy.setBackground(new java.awt.Color(255, 255, 192));
        jScrollPane3.setViewportView(listJehoKnihy);

        panelJehoKnihy.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        taby.addTab("Momentalne pozicane knihy citatela", panelJehoKnihy);

        panelVrateneKnihy.setLayout(new java.awt.BorderLayout());

        listVrateneKnihy.setBackground(new java.awt.Color(255, 255, 192));
        jScrollPane4.setViewportView(listVrateneKnihy);

        panelVrateneKnihy.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        panelPomocnyVrateneKnihy.setMinimumSize(new java.awt.Dimension(10, 25));
        panelPomocnyVrateneKnihy.setPreferredSize(new java.awt.Dimension(100, 25));

        jLabel20.setText("Meno");

        jLabel21.setText("Priezvisko");

        jLabel22.setText("Meno");

        jLabel23.setText("Priezvisko");

        jLabel24.setText("Nazov knihy");

        javax.swing.GroupLayout panelPomocnyVrateneKnihyLayout = new javax.swing.GroupLayout(panelPomocnyVrateneKnihy);
        panelPomocnyVrateneKnihy.setLayout(panelPomocnyVrateneKnihyLayout);
        panelPomocnyVrateneKnihyLayout.setHorizontalGroup(
            panelPomocnyVrateneKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyVrateneKnihyLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel20)
                .addGap(150, 150, 150)
                .addComponent(jLabel21)
                .addGap(150, 150, 150)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addComponent(jLabel23)
                .addGap(189, 189, 189)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(412, 412, 412))
        );
        panelPomocnyVrateneKnihyLayout.setVerticalGroup(
            panelPomocnyVrateneKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPomocnyVrateneKnihyLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelPomocnyVrateneKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPomocnyVrateneKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel21)
                        .addComponent(jLabel22))
                    .addGroup(panelPomocnyVrateneKnihyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel24))))
        );

        panelVrateneKnihy.add(panelPomocnyVrateneKnihy, java.awt.BorderLayout.PAGE_START);

        taby.addTab("Vratene knihy", panelVrateneKnihy);

        getContentPane().add(taby, java.awt.BorderLayout.CENTER);

        menuKniha.setText("Kniha");

        itemPridajKnihu.setText("Pridaj knihu");
        itemPridajKnihu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPridajKnihuActionPerformed(evt);
            }
        });
        menuKniha.add(itemPridajKnihu);

        itemPridajZanerKnihe.setText("Pridaj knihe zaner");
        itemPridajZanerKnihe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPridajZanerKniheActionPerformed(evt);
            }
        });
        menuKniha.add(itemPridajZanerKnihe);

        itemDopytPoKnihe.setText("Kto chce este tuto knihu");
        itemDopytPoKnihe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDopytPoKniheActionPerformed(evt);
            }
        });
        menuKniha.add(itemDopytPoKnihe);

        itemSpracujVsetkyVratene.setText("Spracuj vsetky vratene knihy");
        itemSpracujVsetkyVratene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSpracujVsetkyVrateneActionPerformed(evt);
            }
        });
        menuKniha.add(itemSpracujVsetkyVratene);

        jMenuBar1.add(menuKniha);

        menuCitatel.setText("Citatel");

        itemPridajCitatela.setText("Registruj noveho citatela");
        itemPridajCitatela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPridajCitatelaActionPerformed(evt);
            }
        });
        menuCitatel.add(itemPridajCitatela);

        itemPozicajKnihu.setText("Pozicaj knihu citatelovi");
        itemPozicajKnihu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPozicajKnihuActionPerformed(evt);
            }
        });
        menuCitatel.add(itemPozicajKnihu);

        itemVratitKnihu.setText("Vratit knihu od citatela");
        itemVratitKnihu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVratitKnihuActionPerformed(evt);
            }
        });
        menuCitatel.add(itemVratitKnihu);

        jMenuBar1.add(menuCitatel);

        menuHladat.setText("Hladat");

        itemVyhladajPodlaNazvu.setText("Vyhladaj knihy podla nazvu");
        itemVyhladajPodlaNazvu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVyhladajPodlaNazvuActionPerformed(evt);
            }
        });
        menuHladat.add(itemVyhladajPodlaNazvu);

        itemVyhladajPodlaZanru.setText("Vyhladaj knihy podla zanru");
        itemVyhladajPodlaZanru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVyhladajPodlaZanruActionPerformed(evt);
            }
        });
        menuHladat.add(itemVyhladajPodlaZanru);

        itemVyhladajPodlaMaxPozicAkt.setText("Vyhladaj citatela s najvacsim mnozstvom aktualne pozicanych knih");
        itemVyhladajPodlaMaxPozicAkt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVyhladajPodlaMaxPozicAktActionPerformed(evt);
            }
        });
        menuHladat.add(itemVyhladajPodlaMaxPozicAkt);

        itemVyhladajPodlaMaxPozicCelk.setText("Vyhladaj citatela s najvacsim mnozstvom celkovo pozicanych knih");
        itemVyhladajPodlaMaxPozicCelk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVyhladajPodlaMaxPozicCelkActionPerformed(evt);
            }
        });
        menuHladat.add(itemVyhladajPodlaMaxPozicCelk);

        itemVyhladajPodlaMaxCakPozic.setText("Vyhladaj citatela s najvacsim mnozstvom cakajucich poziadaviek");
        itemVyhladajPodlaMaxCakPozic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemVyhladajPodlaMaxCakPozicActionPerformed(evt);
            }
        });
        menuHladat.add(itemVyhladajPodlaMaxCakPozic);

        jMenuBar1.add(menuHladat);

        menuUlozNacitaj.setText("Uloz/Nacitaj");

        itemUlozStav.setText("Uloz stav kniznice");
        itemUlozStav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemUlozStavActionPerformed(evt);
            }
        });
        menuUlozNacitaj.add(itemUlozStav);

        itemNacitajStav.setText("Nacitaj stav kniznice");
        itemNacitajStav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNacitajStavActionPerformed(evt);
            }
        });
        menuUlozNacitaj.add(itemNacitajStav);

        jMenuBar1.add(menuUlozNacitaj);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemPridajKnihuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPridajKnihuActionPerformed
        String nazov = JOptionPane.showInputDialog(null, "Zadajte nazov knihy");
        String menoAut = JOptionPane.showInputDialog(null, "Zadajte meno autora");
        String priezAut = JOptionPane.showInputDialog(null, "Zadajte priezvisko autora");
        
        int rok = 0;
        int rokTeraz = 0;
        try{
            rok = Integer.parseInt(JOptionPane.showInputDialog(null, "Zadajte rok vydania knihy"));
            rokTeraz = Calendar.getInstance().get(Calendar.YEAR);
            if(rok < 0 || rok > rokTeraz)
                JOptionPane.showMessageDialog(null, "Neplatny rok", "Chyba", JOptionPane.ERROR_MESSAGE);
            else if(nazov.length() == 0 || menoAut.length() == 0 || priezAut.length() == 0)
                JOptionPane.showMessageDialog(null, "Ziadne pole nesmie byt prazdne", "Chyba", JOptionPane.ERROR_MESSAGE);
            else
                aKniznica.pridajKnihu(menoAut, priezAut, nazov, rok);
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Zadali ste nespravny format cisla", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa pridat knihu", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
        
        obnovListKnihy();
    }//GEN-LAST:event_itemPridajKnihuActionPerformed

    private void itemPridajCitatelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPridajCitatelaActionPerformed
        String menoCit = JOptionPane.showInputDialog(null, "Zadajte meno citatela");
        String priezCit = JOptionPane.showInputDialog(null, "Zadajte priezvisko citatela");
        
        int vek = 0;
        try{
            vek = Integer.parseInt(JOptionPane.showInputDialog(null, "Zadajte vek citatela"));
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Neplatny vek");
        }
        
        
        try{
            if(vek < 0 || vek > 150)
                JOptionPane.showMessageDialog(null, "Neplatny vek", "Chyba", JOptionPane.ERROR_MESSAGE);
            else if(menoCit.length() == 0 || priezCit.length() == 0)
                JOptionPane.showMessageDialog(null, "Ziadne pole nesmie byt prazdne", "Chyba", JOptionPane.ERROR_MESSAGE);
            else
                aKniznica.registrovatNovehoCitatela(menoCit, priezCit, vek);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa pridat citatela");
        }
        
        obnovListCitatelia();
    }//GEN-LAST:event_itemPridajCitatelaActionPerformed

    private void itemPridajZanerKniheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPridajZanerKniheActionPerformed
        try {
            String zaner = JOptionPane.showInputDialog(null, "Zadajte zaner");
            if(zaner.length() == 0)
                JOptionPane.showMessageDialog(null, "Nesmie byt prazdne", "Chyba", JOptionPane.ERROR_MESSAGE);
            
            aKniznica.getKnihyVKniznici().get(listKnihy.getSelectedIndex()).pridajZaner(zaner);
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch(ArrayIndexOutOfBoundsException aex){
            JOptionPane.showMessageDialog(null, "Oznacte knihu");
        }
        
        obnovListKnihy();
    }//GEN-LAST:event_itemPridajZanerKniheActionPerformed

    private void itemVratitKnihuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVratitKnihuActionPerformed
        String vratenaKnihaOdCitatela = "";
        try {
            Citatel citatel = (Citatel) listCitatelia.getSelectedValue();
            Kniha kniha = (Kniha) listJehoKnihy.getSelectedValue();
            vratenaKnihaOdCitatela = "Kniha " +
                    kniha.getAutorMeno() + " " + kniha.getAutorPriezvisko() + ", " + kniha.getNazov() + ", " + kniha.getRokVydania() + 
                    " od citatela " + citatel.getMeno() + " " + citatel.getPriezvisko() + " bola uspesne prijata";
            aKniznica.vratitKnihu(citatel, kniha);
            obnovListCitatelia();
            obnovListVrateneKnihy();
            obnovListJehoKnihy();
            JOptionPane.showMessageDialog(null, vratenaKnihaOdCitatela, "Vratenie knihy", JOptionPane.INFORMATION_MESSAGE);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVratitKnihuActionPerformed

    private void itemDopytPoKniheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDopytPoKniheActionPerformed
        try {
            String dopytPoKnihe = "";
            Kniha buk = (Kniha)listKnihy.getSelectedValue();
            
            String menoCitatela = buk.getZoznamCakatelov().peek().getMeno();
            String priezvCitatela = buk.getZoznamCakatelov().peek().getPriezvisko();
            for(int i=0; i<buk.getZoznamCakatelov().size(); i++ ){
                dopytPoKnihe += String.format("%s, %s, %n", menoCitatela, priezvCitatela);
                    
            JOptionPane.showMessageDialog(null, dopytPoKnihe, "Tuto knihu este chcu: ", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (EPriorityFront ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (NullPointerException exNull){
            JOptionPane.showMessageDialog(null, "Tuto knihu uz nikto nechce :(", "CHA-CHA", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itemDopytPoKniheActionPerformed

    private void itemPozicajKnihuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPozicajKnihuActionPerformed
        try {
            Citatel citatel = (Citatel) listCitatelia.getSelectedValue();
            aJehoIndex = listCitatelia.getSelectedIndex();
            Kniha kniha = (Kniha) listKnihy.getSelectedValue();
            aKniznica.pozicatKnihu(citatel, kniha);
            obnovListKnihy();
            obnovListCitatelia();
            obnovListJehoKnihy();
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemPozicajKnihuActionPerformed

    private void itemSpracujVsetkyVrateneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSpracujVsetkyVrateneActionPerformed
        try {
            aKniznica.spracujVsetkyVrateneKnihy();
            obnovListCitatelia();
            obnovListKnihy();
            obnovListVrateneKnihy();
            obnovListJehoKnihy();
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemSpracujVsetkyVrateneActionPerformed

    private void itemVyhladajPodlaMaxPozicAktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVyhladajPodlaMaxPozicAktActionPerformed
        String vysledkyHladania = String.format("%s, %n", "Vysledky hladania: ").replace(",", "");
        try {
            for(int i=0; i<aKniznica.vyhladajCitatelaPodlaMaxPozicanychKnihAktualne().size(); i++)
                vysledkyHladania += String.format("%s, %n", aKniznica.vyhladajCitatelaPodlaMaxPozicanychKnihAktualne().get(i).toString()).replace(",", "");
            
            JOptionPane.showMessageDialog(null, vysledkyHladania, null, WIDTH);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVyhladajPodlaMaxPozicAktActionPerformed

    private void itemVyhladajPodlaMaxPozicCelkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVyhladajPodlaMaxPozicCelkActionPerformed
        String vysledkyHladania = String.format("%s, %n", "Vysledky hladania: ").replace(",", "");
        try {
            for(int i=0; i<aKniznica.vyhladajCitatelaPodlaMaxPozicanychKnihCelkovo().size(); i++)
                vysledkyHladania += String.format("%s, %n", aKniznica.vyhladajCitatelaPodlaMaxPozicanychKnihCelkovo().get(i).toString()).replace(",", "");
            
            JOptionPane.showMessageDialog(null, vysledkyHladania, null, WIDTH);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVyhladajPodlaMaxPozicCelkActionPerformed

    private void itemVyhladajPodlaMaxCakPozicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVyhladajPodlaMaxCakPozicActionPerformed
        String vysledkyHladania = String.format("%s, %n", "Vysledky hladania: ").replace(",", "");
        try {
            for(int i=0; i<aKniznica.vyhladajCitatelaPodlaMaxCakajucichPoziadaviek().size(); i++)
                vysledkyHladania += String.format("%s, %n", aKniznica.vyhladajCitatelaPodlaMaxCakajucichPoziadaviek().get(i).toString()).replace(",", "");
            
            JOptionPane.showMessageDialog(null, vysledkyHladania, null, WIDTH);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVyhladajPodlaMaxCakPozicActionPerformed

    private void itemVyhladajPodlaNazvuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVyhladajPodlaNazvuActionPerformed
        try {           
            String hladanyNazov = JOptionPane.showInputDialog(null, "Zadajte cast nazvu knihy", "Vyhladavanie", JOptionPane.QUESTION_MESSAGE);
            String vysledkyHladania = String.format("%s, %n", "Vysledky hladania: ");
            ArrayList<Kniha> hladaneKnihy = aKniznica.vyhladajKnihuPodlaNazvu(hladanyNazov);
            int kolko = hladaneKnihy.size();
            for(int i=0; i<kolko; i++)
                vysledkyHladania += String.format("%s, %n", hladaneKnihy.get(i).toString() );
            
            JOptionPane.showMessageDialog(null, vysledkyHladania, "Vysledky hladania", JOptionPane.INFORMATION_MESSAGE);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVyhladajPodlaNazvuActionPerformed

    private void itemVyhladajPodlaZanruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemVyhladajPodlaZanruActionPerformed
        try {           
            String hladanyZaner = JOptionPane.showInputDialog(null, "Zadajte cast zanru knihy", "Vyhladavanie", JOptionPane.QUESTION_MESSAGE);
            String vysledkyHladania = String.format("%s, %n", "Vysledky hladania: ").replace(",", "");
            ArrayList<Kniha> hladaneKnihy = aKniznica.vsetkyKnihyDanehoZanru(hladanyZaner);
            int kolko = hladaneKnihy.size();
            for(int i=0; i<kolko; i++)
                vysledkyHladania += String.format("%s, %n", hladaneKnihy.get(i).toString() ).replace(",", "");
            
            JOptionPane.showMessageDialog(null, vysledkyHladania, "Vysledky hladania", JOptionPane.INFORMATION_MESSAGE);
        } catch (EKniznica ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa");
        }
    }//GEN-LAST:event_itemVyhladajPodlaZanruActionPerformed

    private void itemNacitajStavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNacitajStavActionPerformed
        String nazovSuboru = "save.dat";
        try {
            FileInputStream file = new FileInputStream(nazovSuboru);
            ObjectInputStream ois = new ObjectInputStream(file);
            aKniznica = (Kniznica) ois.readObject();
            ois.close();
            
            obnovListCitatelia();
            obnovListKnihy();
            obnovListVrateneKnihy();
            obnovListJehoKnihy();
            
            JOptionPane.showMessageDialog(null, "Kniznica uspesne obnovena", "Obnovenie", JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Subor nenajdeny", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IO chyba", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Trieda neexistuje", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itemNacitajStavActionPerformed

    private void itemUlozStavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemUlozStavActionPerformed
        //vsetky triedy aj udajove struktury (okrem iteratorov) treba aby implementovali serializaciu
        String nazovSuboru = "save.dat";
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(nazovSuboru));
            
            oos.writeObject(aKniznica);
            
            oos.close();
            JOptionPane.showMessageDialog(null, "Kniznica uspesne ulozena", "Ulozenie", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "IO chyba", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itemUlozStavActionPerformed

    private void listCitateliaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCitateliaMouseClicked
        if(evt.getClickCount() == 1){
             aJehoIndex = listCitatelia.locationToIndex(evt.getPoint());
             ListModel dlm = listCitatelia.getModel();
             //DefaultListModel<Kniha> modelCitatela = (DefaultListModel<Kniha>) listCitatelia.getModel();
             Citatel item = (Citatel) dlm.getElementAt(aJehoIndex);;
             //listCitatelia.ensureIndexIsVisible(aJehoIndex);
             //System.out.println("Double clicked on " + item.getMeno() + " " + item.getPriezvisko());

             try {
                DefaultListModel<Kniha> modelJehoPozicanejKnihy = new DefaultListModel<>();
                for (Kniha tato : aKniznica.getCitatelia().get(aJehoIndex).getJehoKnihy()) {
                    modelJehoPozicanejKnihy.addElement(tato);
                }
                listJehoKnihy.setModel(modelJehoPozicanejKnihy);
            } catch (EList ex) {
                JOptionPane.showMessageDialog(null, "Nepodarilo sa obnovit pozicane knihy citatela", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
         
         }
    }//GEN-LAST:event_listCitateliaMouseClicked

    
    private void obnovListKnihy(){
        DefaultListModel<Kniha> modelKnihy = new DefaultListModel<>();
//        for (Kniha tato : aKniznica.getKnihyVKniznici()) {
//            modelKnihy.addElement(tato);
//        }
//        listKnihy.setModel(modelKnihy);
        Routines.listListElements(aKniznica.getKnihyVKniznici(), listKnihy);
    }
    
    private void obnovListCitatelia(){
        DefaultListModel<Citatel> modelCitatela = new DefaultListModel<>();
        for (Citatel tento : aKniznica.getCitatelia()) {
            modelCitatela.addElement(tento);
        }
        listCitatelia.setModel(modelCitatela);
    }
    
    private void obnovListJehoKnihy(){
        try {
            DefaultListModel<Kniha> modelJehoPozicanejKnihy = new DefaultListModel<>();
            for (Kniha tato : aKniznica.getCitatelia().get(aJehoIndex).getJehoKnihy()) {
                modelJehoPozicanejKnihy.addElement(tato);
            }
            listJehoKnihy.setModel(modelJehoPozicanejKnihy);
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa obnovit pozicane knihy citatela", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void obnovListVrateneKnihy(){
//        DefaultListModel<Kniha> modelVratene = new DefaultListModel<>();
//        for (Kniha tato : aKniznica.getVrateneKnihy()) {
//            modelVratene.addElement(tato);
//        }
//        listVrateneKnihy.setModel(modelVratene);
        Routines.listFrontElements(aKniznica.getVrateneKnihy(), listVrateneKnihy);
    }
    
    //obnov pozicane knihy daneho citatela 
    public void mouseClicked(MouseEvent e){
       if(e.getClickCount() == 2){
         aJehoIndex = listCitatelia.locationToIndex(e.getPoint());
         ListModel dlm = listCitatelia.getModel();
         //DefaultListModel<Kniha> modelCitatela = (DefaultListModel<Kniha>) listCitatelia.getModel();
         Citatel item = (Citatel) dlm.getElementAt(aJehoIndex);;
         listCitatelia.ensureIndexIsVisible(aJehoIndex);
         System.out.println("Double clicked on " + item.getMeno() + " " + item.getPriezvisko());
         
         try {
            DefaultListModel<Kniha> modelJehoPozicanejKnihy = new DefaultListModel<>();
            for (Kniha tato : aKniznica.getCitatelia().get(aJehoIndex).getJehoKnihy()) {
                modelJehoPozicanejKnihy.addElement(tato);
            }
            listJehoKnihy.setModel(modelJehoPozicanejKnihy);
        } catch (EList ex) {
            JOptionPane.showMessageDialog(null, "Nepodarilo sa obnovit pozicane knihy citatela", "Chyba", JOptionPane.ERROR_MESSAGE);
        }
         
         }
   }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemDopytPoKnihe;
    private javax.swing.JMenuItem itemNacitajStav;
    private javax.swing.JMenuItem itemPozicajKnihu;
    private javax.swing.JMenuItem itemPridajCitatela;
    private javax.swing.JMenuItem itemPridajKnihu;
    private javax.swing.JMenuItem itemPridajZanerKnihe;
    private javax.swing.JMenuItem itemSpracujVsetkyVratene;
    private javax.swing.JMenuItem itemUlozStav;
    private javax.swing.JMenuItem itemVratitKnihu;
    private javax.swing.JMenuItem itemVyhladajPodlaMaxCakPozic;
    private javax.swing.JMenuItem itemVyhladajPodlaMaxPozicAkt;
    private javax.swing.JMenuItem itemVyhladajPodlaMaxPozicCelk;
    private javax.swing.JMenuItem itemVyhladajPodlaNazvu;
    private javax.swing.JMenuItem itemVyhladajPodlaZanru;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList listCitatelia;
    private javax.swing.JList listJehoKnihy;
    private javax.swing.JList listKnihy;
    private javax.swing.JList listVrateneKnihy;
    private javax.swing.JMenu menuCitatel;
    private javax.swing.JMenu menuHladat;
    private javax.swing.JMenu menuKniha;
    private javax.swing.JMenu menuUlozNacitaj;
    private javax.swing.JPanel panelCitateila;
    private javax.swing.JPanel panelJehoKnihy;
    private javax.swing.JPanel panelKnihy;
    private javax.swing.JPanel panelPomocnyCitatelia;
    private javax.swing.JPanel panelPomocnyKnihy;
    private javax.swing.JPanel panelPomocnyKnihy1;
    private javax.swing.JPanel panelPomocnyVrateneKnihy;
    private javax.swing.JPanel panelVrateneKnihy;
    private javax.swing.JTabbedPane taby;
    // End of variables declaration//GEN-END:variables
}
