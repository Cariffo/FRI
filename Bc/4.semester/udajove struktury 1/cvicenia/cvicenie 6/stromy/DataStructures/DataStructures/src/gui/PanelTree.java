package gui;

import datastructures.lists.IList;
import datastructures.trees.ETree;
import datastructures.trees.ITree;
import datastructures.trees.ITreeNode;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Michal Varga
 */
public class PanelTree extends javax.swing.JPanel {

    private static final int INSERT_ROOT = 0;
    private static final int DELETE_ROOT = 1;
    private static final int INSERT_LEAF = 2;
    private static final int DELETE_CHILD = 3;
    private static final int IS_COMPLETE = 4;
    private static final int IS_BALANCED = 5;
    private static final int PRE_ORDER = 6; 
    private static final int POST_ORDER = 7;
    private static final int LEVEL_ORDER = 8;
    private static final int SIZE = 9;
    private static final int CLEAR = 10;
    
    private ITree aTree;
    private IEditData aEditData; 
    
    private void setEnabledComponents(boolean paValue) {
        btnInsertRoot.setEnabled(paValue);
        btnDeleteRoot.setEnabled(paValue);
        btnInsertLeaf.setEnabled(paValue);
        btnDeleteChild.setEnabled(paValue);
        btnIsBalanced.setEnabled(paValue);
        btnIsComplete.setEnabled(paValue);
        btnPreOrder.setEnabled(paValue);
        btnPostOrder.setEnabled(paValue);
        btnLevelOrder.setEnabled(paValue);
        btnSize.setEnabled(paValue);
        btnClear.setEnabled(paValue);
    }
    
    /**
     * Creates new form PanelTree
     */
    public PanelTree() {
        initComponents();
        
        aTree = null;
        aEditData = null;
        
        setEnabledComponents(false);
        
        panelOperations.registerOperation(INSERT_ROOT, "Insert root");
        panelOperations.registerOperation(DELETE_ROOT, "Delete root");
        panelOperations.registerOperation(INSERT_LEAF, "Insert leaf");
        panelOperations.registerOperation(DELETE_CHILD, "Delete child");
        panelOperations.registerOperation(IS_BALANCED, "Is balanced");
        panelOperations.registerOperation(IS_COMPLETE, "Is complete");
        panelOperations.registerOperation(PRE_ORDER, "Pre order");
        panelOperations.registerOperation(POST_ORDER, "Post order");
        panelOperations.registerOperation(LEVEL_ORDER, "Level order");
        panelOperations.registerOperation(SIZE, "Size");
        panelOperations.registerOperation(CLEAR, "Clear");
    }

    public void init(ITree paTree, IEditData paEditData) {
        aTree = paTree;
        aEditData = paEditData;
        
        Routines.listTreeElements(aTree, treeElements);
        
        setEnabledComponents(true);        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolsTree = new javax.swing.JToolBar();
        lblOperationTree = new javax.swing.JLabel();
        btnInsertRoot = new javax.swing.JButton();
        btnDeleteRoot = new javax.swing.JButton();
        btnInsertLeaf = new javax.swing.JButton();
        btnDeleteChild = new javax.swing.JButton();
        btnIsComplete = new javax.swing.JButton();
        btnIsBalanced = new javax.swing.JButton();
        btnSize = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        toolsTest = new javax.swing.JToolBar();
        lblOperationsTest = new javax.swing.JLabel();
        btnPreOrder = new javax.swing.JButton();
        btnPostOrder = new javax.swing.JButton();
        btnLevelOrder = new javax.swing.JButton();
        panelOperations = new gui.PanelOperations();
        panelElements = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeElements = new javax.swing.JTree();
        lblElements = new javax.swing.JLabel();
        panelOrders = new javax.swing.JPanel();
        lblORders = new javax.swing.JLabel();
        paneOrders = new javax.swing.JScrollPane();
        listOrders = new javax.swing.JList();

        toolsTree.setRollover(true);

        lblOperationTree.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lblOperationTree.setText("Operations:");
        toolsTree.add(lblOperationTree);

        btnInsertRoot.setText("Insert root");
        btnInsertRoot.setFocusable(false);
        btnInsertRoot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsertRoot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsertRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertRootActionPerformed(evt);
            }
        });
        toolsTree.add(btnInsertRoot);

        btnDeleteRoot.setText("Delete root");
        btnDeleteRoot.setFocusable(false);
        btnDeleteRoot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeleteRoot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeleteRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRootActionPerformed(evt);
            }
        });
        toolsTree.add(btnDeleteRoot);

        btnInsertLeaf.setText("Insert leaf");
        btnInsertLeaf.setFocusable(false);
        btnInsertLeaf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsertLeaf.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsertLeaf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertLeafActionPerformed(evt);
            }
        });
        toolsTree.add(btnInsertLeaf);

        btnDeleteChild.setText("Delete child of node");
        btnDeleteChild.setFocusable(false);
        btnDeleteChild.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeleteChild.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeleteChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteChildActionPerformed(evt);
            }
        });
        toolsTree.add(btnDeleteChild);

        btnIsComplete.setText("Is complete?");
        btnIsComplete.setFocusable(false);
        btnIsComplete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIsComplete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIsComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsCompleteActionPerformed(evt);
            }
        });
        toolsTree.add(btnIsComplete);

        btnIsBalanced.setText("Is balanced?");
        btnIsBalanced.setFocusable(false);
        btnIsBalanced.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIsBalanced.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIsBalanced.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIsBalancedActionPerformed(evt);
            }
        });
        toolsTree.add(btnIsBalanced);

        btnSize.setText("Size");
        btnSize.setFocusable(false);
        btnSize.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSize.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSizeActionPerformed(evt);
            }
        });
        toolsTree.add(btnSize);

        btnClear.setText("Clear");
        btnClear.setFocusable(false);
        btnClear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        toolsTree.add(btnClear);

        toolsTest.setRollover(true);

        lblOperationsTest.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        lblOperationsTest.setText("Tree orders:");
        toolsTest.add(lblOperationsTest);

        btnPreOrder.setText("PreOrder");
        btnPreOrder.setFocusable(false);
        btnPreOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPreOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPreOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrderActionPerformed(evt);
            }
        });
        toolsTest.add(btnPreOrder);

        btnPostOrder.setText("PostOrder");
        btnPostOrder.setFocusable(false);
        btnPostOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPostOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPostOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrderActionPerformed(evt);
            }
        });
        toolsTest.add(btnPostOrder);

        btnLevelOrder.setText("LevelOrder");
        btnLevelOrder.setFocusable(false);
        btnLevelOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLevelOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLevelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLevelOrderActionPerformed(evt);
            }
        });
        toolsTest.add(btnLevelOrder);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        treeElements.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(treeElements);

        lblElements.setText("Elements:");

        javax.swing.GroupLayout panelElementsLayout = new javax.swing.GroupLayout(panelElements);
        panelElements.setLayout(panelElementsLayout);
        panelElementsLayout.setHorizontalGroup(
            panelElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelElementsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(panelElementsLayout.createSequentialGroup()
                        .addComponent(lblElements)
                        .addGap(0, 192, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelElementsLayout.setVerticalGroup(
            panelElementsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelElementsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblElements)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        lblORders.setText("Orders:");

        paneOrders.setViewportView(listOrders);

        javax.swing.GroupLayout panelOrdersLayout = new javax.swing.GroupLayout(panelOrders);
        panelOrders.setLayout(panelOrdersLayout);
        panelOrdersLayout.setHorizontalGroup(
            panelOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOrdersLayout.createSequentialGroup()
                        .addComponent(lblORders)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(paneOrders))
                .addContainerGap())
        );
        panelOrdersLayout.setVerticalGroup(
            panelOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblORders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneOrders, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolsTree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(toolsTest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelOperations, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolsTree, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolsTest, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelElements, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelOperations, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPostOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrderActionPerformed
        try {
            panelOperations.start(POST_ORDER);
            IList<Object> list = aTree.postOrder();
            panelOperations.finish(POST_ORDER,true);
            
            Routines.listListElements(list, listOrders);                        
        } catch (ETree ex) {
            panelOperations.except(POST_ORDER,ex,true);
        }
    }//GEN-LAST:event_btnPostOrderActionPerformed

    private void btnPreOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrderActionPerformed
        try {
            panelOperations.start(PRE_ORDER);
            IList<Object> list = aTree.preOrder();
            panelOperations.finish(PRE_ORDER,true);
            
            Routines.listListElements(list, listOrders);                        
        } catch (ETree ex) {
            panelOperations.except(PRE_ORDER,ex,true);
        }
    }//GEN-LAST:event_btnPreOrderActionPerformed

    private void btnLevelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLevelOrderActionPerformed
        try {
            panelOperations.start(LEVEL_ORDER);
            IList<Object> list = aTree.levelOrder();
            panelOperations.finish(LEVEL_ORDER,true);
            
            Routines.listListElements(list, listOrders);                        
        } catch (ETree ex) {
            panelOperations.except(LEVEL_ORDER,ex,true);
        }
    }//GEN-LAST:event_btnLevelOrderActionPerformed

    private void btnInsertRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertRootActionPerformed
        try {
            Object data = aEditData.createData();
            if (data != null) {  
                panelOperations.start(INSERT_ROOT);
                aTree.insertRoot(data);
                panelOperations.finish(INSERT_ROOT,true);
            }
            else
               panelOperations.abort(INSERT_ROOT,true);
        } catch (ETree ex) {
            panelOperations.except(INSERT_ROOT,ex,true);
        }
        
        Routines.listTreeElements(aTree, treeElements);  
    }//GEN-LAST:event_btnInsertRootActionPerformed

    private void btnDeleteRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRootActionPerformed
        try {
            panelOperations.start(DELETE_ROOT);
            aTree.deleteRoot();
            panelOperations.finish(DELETE_ROOT,true);
        } catch (ETree ex) {
            panelOperations.except(DELETE_ROOT,ex,true);
        }
        
        Routines.listTreeElements(aTree, treeElements);
    }//GEN-LAST:event_btnDeleteRootActionPerformed

    private void btnIsCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsCompleteActionPerformed
        try { 
            panelOperations.start(IS_COMPLETE);
            boolean isComplete = aTree.isComplete();        
            panelOperations.finish(IS_COMPLETE,isComplete ? "true" : "false",true);
        } catch (ETree ex) {
            panelOperations.except(IS_COMPLETE,ex,true);
        }
    }//GEN-LAST:event_btnIsCompleteActionPerformed

    private void btnIsBalancedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIsBalancedActionPerformed
        try { 
            panelOperations.start(IS_BALANCED);
            boolean isBalanced = aTree.isBalanced();
            panelOperations.finish(IS_BALANCED,isBalanced ? "true" : "false",true);
        } catch (ETree ex) {
            panelOperations.except(IS_BALANCED,ex,true);
        }
    }//GEN-LAST:event_btnIsBalancedActionPerformed

    private void btnInsertLeafActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertLeafActionPerformed
        try {
            Object data = aEditData.createData();
            if (data != null) {  
                DefaultMutableTreeNode node = (DefaultMutableTreeNode)treeElements.getSelectionPath().getLastPathComponent();
                ITreeNode<Object> parent = node != null ? (ITreeNode<Object>)node.getUserObject() : null;
                if(parent != null) {
                    panelOperations.start(INSERT_LEAF);
                    aTree.insertLeaf(data, parent);
                    panelOperations.finish(INSERT_LEAF,true);
                }
                else
                    panelOperations.abort(INSERT_LEAF, true);
            }
            else
               panelOperations.abort(INSERT_LEAF,true);
        } catch (ETree ex) {
            panelOperations.except(INSERT_LEAF,ex,true);
        }
        
        Routines.listTreeElements(aTree, treeElements);  
    }//GEN-LAST:event_btnInsertLeafActionPerformed

    private void btnDeleteChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteChildActionPerformed
        try {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode)treeElements.getSelectionPath().getLastPathComponent();
            ITreeNode<Object> parent = node != null ? (ITreeNode<Object>)node.getUserObject() : null;
            if (parent != null) {
                int index = Routines.getIntDialog("Delete child index");
                panelOperations.start(DELETE_CHILD);
                aTree.deleteChild(parent, index);
                panelOperations.finish(DELETE_CHILD,true);
            }
            else
                panelOperations.abort(DELETE_CHILD,true);
        } catch (ETree ex) {
            panelOperations.except(DELETE_CHILD,ex,true);
        }
        
        Routines.listTreeElements(aTree, treeElements); 
    }//GEN-LAST:event_btnDeleteChildActionPerformed

    private void btnSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSizeActionPerformed
        try { 
            panelOperations.start(SIZE);
            int size = aTree.size();        
            panelOperations.finish(SIZE,Integer.toString(size),true);
        } catch (ETree ex) {
            panelOperations.except(SIZE,ex,true);
        }
    }//GEN-LAST:event_btnSizeActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        try { 
            panelOperations.start(CLEAR);
            aTree.clear();
            panelOperations.finish(CLEAR,true);
            Routines.listTreeElements(aTree, treeElements);
        } catch (ETree ex) {
            panelOperations.except(CLEAR,ex,true);
        }
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeleteChild;
    private javax.swing.JButton btnDeleteRoot;
    private javax.swing.JButton btnInsertLeaf;
    private javax.swing.JButton btnInsertRoot;
    private javax.swing.JButton btnIsBalanced;
    private javax.swing.JButton btnIsComplete;
    private javax.swing.JButton btnLevelOrder;
    private javax.swing.JButton btnPostOrder;
    private javax.swing.JButton btnPreOrder;
    private javax.swing.JButton btnSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblElements;
    private javax.swing.JLabel lblORders;
    private javax.swing.JLabel lblOperationTree;
    private javax.swing.JLabel lblOperationsTest;
    private javax.swing.JList listOrders;
    private javax.swing.JScrollPane paneOrders;
    private javax.swing.JPanel panelElements;
    private gui.PanelOperations panelOperations;
    private javax.swing.JPanel panelOrders;
    private javax.swing.JToolBar toolsTest;
    private javax.swing.JToolBar toolsTree;
    private javax.swing.JTree treeElements;
    // End of variables declaration//GEN-END:variables
}
