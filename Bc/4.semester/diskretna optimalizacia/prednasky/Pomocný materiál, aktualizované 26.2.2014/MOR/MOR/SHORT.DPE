PROGRAM
                    "Shortest route problem"
        "Denardo [1982], DYNAMIC PROGRAMMING: Models and
            Applications, pp 8ff"

DEFINITION

"----Successor Lists-----------------Routing Costs----------"
  J.1 : sequence = <2,3>;         c.1 : ARRAY[J.1] = (1,2);
  J.2 : sequence = <4,5>;         c.2 : ARRAY[J.2] = (6,12);
  J.3 : sequence = <4,6>;         c.3 : ARRAY[J.3] = (3,4);
  J.4 : sequence = <5,6,7,8>;     c.4 : ARRAY[J.4] = (4,3,15,7);
  J.5 : sequence = <7>;           c.5 : ARRAY[J.5] = (7);
  J.6 : sequence = <8,9>;         c.6 : ARRAY[J.6] = (7,15);
  J.7 : sequence = <9>;           c.7 : ARRAY[J.7] = (3);
  J.8 : sequence = <9>;           c.8 : ARRAY[J.8] = (10);
  x : ARRAY [ <1..10> ] = all(0);
  i =0;         
CONTROL
  BackTrack = on;
LOGIC
  f.9 = min{ 0 :d in <10>};
  f.k = min{ c.k[d] + f.d  : d in J.k },
             k in <8..1:-1>;
  GetBacktrack(x, f.1, 1);
  println('OPTIMAL SOLUTION');
  PRINTLN(' Path length: ',f.1:3);
  for (i=1 ; i<=9; i=i+1) do 
    if x[10-i]<>0 then print(i:2,'->',x[10-i]:2,' ');
  println;
END.

